{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"CLIEN",
				"CLIENT_PROTECTING"
			],
			[
				"CLIENT",
				"CLIENT_NO_PROTECTION"
			],
			[
				"DEF",
				"DefaultController"
			],
			[
				"dia",
				"dialogPageBreak"
			],
			[
				"tar",
				"targetType"
			],
			[
				"required",
				"required-validate"
			],
			[
				"alertSele",
				"alertSelectHrefMsg"
			],
			[
				"check",
				"checked"
			],
			[
				"che",
				"checkbox"
			],
			[
				"sele",
				"selectedTodo"
			],
			[
				"se",
				"serializeArray"
			],
			[
				"inlin",
				"inline-block"
			],
			[
				"MAS",
				"MASK_EDIT"
			],
			[
				"subHe",
				"subHeaderId"
			],
			[
				"over",
				"overflow"
			],
			[
				"back",
				"background-color"
			],
			[
				"ov",
				"overflow"
			],
			[
				"padd",
				"padding"
			],
			[
				"Adm",
				"AdminBaseController"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/DependencyInjection/SecurityExtension.php",
			"settings":
			{
				"buffer_size": 27788,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "Searching 321 files for \"RedirectResponse\"\n\nE:\\workspace\\myframework-php\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Security\\Guard\\Authenticator\\AbstractFormLoginAuthenticator.php:\n   13  \n   14  use Symfony\\Component\\Security\\Guard\\AbstractGuardAuthenticator;\n   15: use Symfony\\Component\\HttpFoundation\\RedirectResponse;\n   16  use Symfony\\Component\\HttpFoundation\\Request;\n   17  use Symfony\\Component\\Security\\Core\\Authentication\\Token\\TokenInterface;\n   ..\n   42       * @param AuthenticationException $exception\n   43       *\n   44:      * @return RedirectResponse\n   45       */\n   46      public function onAuthenticationFailure(Request $request, AuthenticationException $exception)\n   ..\n   49          $url = $this->getLoginUrl();\n   50  \n   51:         return new RedirectResponse($url);\n   52      }\n   53  \n   ..\n   59       * @param string         $providerKey\n   60       *\n   61:      * @return RedirectResponse\n   62       */\n   63      public function onAuthenticationSuccess(Request $request, TokenInterface $token, $providerKey)\n   ..\n   77          }\n   78  \n   79:         return new RedirectResponse($targetPath);\n   80      }\n   81  \n   ..\n   92       * @param AuthenticationException|null $authException\n   93       *\n   94:      * @return RedirectResponse\n   95       */\n   96      public function start(Request $request, AuthenticationException $authException = null)\n   ..\n   98          $url = $this->getLoginUrl();\n   99  \n  100:         return new RedirectResponse($url);\n  101      }\n  102  }\n\nE:\\workspace\\myframework-php\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Security\\Guard\\GuardAuthenticatorInterface.php:\n  111       *\n  112       * This should return the Response sent back to the user, like a\n  113:      * RedirectResponse to the login page or a 403 response.\n  114       *\n  115       * If you return null, the request will continue, but the user will\n  ...\n  127       *\n  128       * This should return the Response sent back to the user, like a\n  129:      * RedirectResponse to the last page they visited.\n  130       *\n  131       * If you return null, the current request will continue, and the user\n\nE:\\workspace\\myframework-php\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Security\\Guard\\Tests\\Authenticator\\AbstractFormLoginAuthenticatorTest.php:\n   12  namespace Symfony\\Component\\Security\\Guard\\Tests\\Authenticator;\n   13  \n   14: use Symfony\\Component\\HttpFoundation\\RedirectResponse;\n   15  use Symfony\\Component\\HttpFoundation\\Request;\n   16  use Symfony\\Component\\Security\\Core\\User\\UserInterface;\n   ..\n   29  \n   30          $authenticator = new LegacyFormLoginAuthenticator();\n   31:         /** @var RedirectResponse $actualResponse */\n   32          $actualResponse = $authenticator->onAuthenticationSuccess(\n   33              $request,\n\nE:\\workspace\\myframework-php\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Security\\Http\\Authentication\\DefaultAuthenticationFailureHandler.php:\n  109          $request->getSession()->set(Security::AUTHENTICATION_ERROR, $exception);\n  110  \n  111:         return $this->httpUtils->createRedirectResponse($request, $this->options['failure_path']);\n  112      }\n  113  }\n\nE:\\workspace\\myframework-php\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Security\\Http\\Authentication\\DefaultAuthenticationSuccessHandler.php:\n   57      public function onAuthenticationSuccess(Request $request, TokenInterface $token)\n   58      {\n   59:         return $this->httpUtils->createRedirectResponse($request, $this->determineTargetUrl($request));\n   60      }\n   61  \n\nE:\\workspace\\myframework-php\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Security\\Http\\EntryPoint\\AuthenticationEntryPointInterface.php:\n   33       * Examples:\n   34       *  A) For a form login, you might redirect to the login page\n   35:      *      return new RedirectResponse('/login');\n   36       *  B) For an API token authentication system, you return a 401 response\n   37       *      return new Response('Auth header required', 401);\n\nE:\\workspace\\myframework-php\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Security\\Http\\EntryPoint\\FormAuthenticationEntryPoint.php:\n   61          }\n   62  \n   63:         return $this->httpUtils->createRedirectResponse($request, $this->loginPath);\n   64      }\n   65  }\n\nE:\\workspace\\myframework-php\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Security\\Http\\EntryPoint\\RetryAuthenticationEntryPoint.php:\n   13  \n   14  use Symfony\\Component\\Security\\Core\\Exception\\AuthenticationException;\n   15: use Symfony\\Component\\HttpFoundation\\RedirectResponse;\n   16  use Symfony\\Component\\HttpFoundation\\Request;\n   17  \n   ..\n   55          $url = $scheme.'://'.$request->getHost().$port.$request->getBaseUrl().$request->getPathInfo().$qs;\n   56  \n   57:         return new RedirectResponse($url, 301);\n   58      }\n   59  }\n\nE:\\workspace\\myframework-php\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Security\\Http\\Firewall\\SwitchUserListener.php:\n   20  use Symfony\\Component\\HttpKernel\\Event\\GetResponseEvent;\n   21  use Symfony\\Component\\Security\\Core\\Exception\\AuthenticationException;\n   22: use Symfony\\Component\\HttpFoundation\\RedirectResponse;\n   23  use Symfony\\Component\\HttpFoundation\\Request;\n   24  use Symfony\\Component\\Security\\Core\\Role\\SwitchUserRole;\n   ..\n   94          $request->server->set('QUERY_STRING', http_build_query($request->query->all()));\n   95  \n   96:         $response = new RedirectResponse($request->getUri(), 302);\n   97  \n   98          $event->setResponse($response);\n\nE:\\workspace\\myframework-php\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Security\\Http\\HttpUtils.php:\n   13  \n   14  use Symfony\\Component\\HttpFoundation\\Request;\n   15: use Symfony\\Component\\HttpFoundation\\RedirectResponse;\n   16  use Symfony\\Component\\Routing\\Matcher\\UrlMatcherInterface;\n   17  use Symfony\\Component\\Routing\\Matcher\\RequestMatcherInterface;\n   ..\n   55       * @param int     $status  The status code\n   56       *\n   57:      * @return RedirectResponse A RedirectResponse instance\n   58       */\n   59:     public function createRedirectResponse(Request $request, $path, $status = 302)\n   60      {\n   61:         return new RedirectResponse($this->generateUri($request, $path), $status);\n   62      }\n   63  \n\nE:\\workspace\\myframework-php\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Security\\Http\\Logout\\DefaultLogoutSuccessHandler.php:\n   42      public function onLogoutSuccess(Request $request)\n   43      {\n   44:         return $this->httpUtils->createRedirectResponse($request, $this->targetUrl);\n   45      }\n   46  }\n\nE:\\workspace\\myframework-php\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Security\\Http\\Tests\\Authentication\\DefaultAuthenticationFailureHandlerTest.php:\n   63          $response = $this->getMock('Symfony\\Component\\HttpFoundation\\Response');\n   64          $this->httpUtils->expects($this->once())\n   65:             ->method('createRedirectResponse')->with($this->request, '/login')\n   66              ->will($this->returnValue($response));\n   67  \n   ..\n  132  \n  133          $this->httpUtils->expects($this->once())\n  134:             ->method('createRedirectResponse')->with($this->request, '/auth/login');\n  135  \n  136          $handler = new DefaultAuthenticationFailureHandler($this->httpKernel, $this->httpUtils, $options, $this->logger);\n  ...\n  145  \n  146          $this->httpUtils->expects($this->once())\n  147:             ->method('createRedirectResponse')->with($this->request, '/auth/login');\n  148  \n  149          $handler = new DefaultAuthenticationFailureHandler($this->httpKernel, $this->httpUtils, array(), $this->logger);\n  ...\n  158  \n  159          $this->httpUtils->expects($this->once())\n  160:             ->method('createRedirectResponse')->with($this->request, '/auth/login');\n  161  \n  162          $handler = new DefaultAuthenticationFailureHandler($this->httpKernel, $this->httpUtils, array('failure_path_parameter' => '_failure_path[value]'), $this->logger);\n  ...\n  173  \n  174          $this->httpUtils->expects($this->once())\n  175:             ->method('createRedirectResponse')->with($this->request, '/auth/login');\n  176  \n  177          $handler = new DefaultAuthenticationFailureHandler($this->httpKernel, $this->httpUtils, $options, $this->logger);\n\nE:\\workspace\\myframework-php\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Security\\Http\\Tests\\Authentication\\DefaultAuthenticationSuccessHandlerTest.php:\n   32      public function testRequestIsRedirected()\n   33      {\n   34:         $response = $this->expectRedirectResponse('/');\n   35  \n   36          $handler = new DefaultAuthenticationSuccessHandler($this->httpUtils, array());\n   ..\n   47          );\n   48  \n   49:         $response = $this->expectRedirectResponse('/dashboard');\n   50  \n   51          $handler = new DefaultAuthenticationSuccessHandler($this->httpUtils, $options);\n   ..\n   61              ->will($this->returnValue('/dashboard'));\n   62  \n   63:         $response = $this->expectRedirectResponse('/dashboard');\n   64  \n   65          $handler = new DefaultAuthenticationSuccessHandler($this->httpUtils, array());\n   ..\n   75              ->will($this->returnValue(array('value' => '/dashboard')));\n   76  \n   77:         $response = $this->expectRedirectResponse('/dashboard');\n   78  \n   79          $handler = new DefaultAuthenticationSuccessHandler($this->httpUtils, array('target_path_parameter' => '_target_path[value]'));\n   ..\n   91              ->will($this->returnValue('/dashboard'));\n   92  \n   93:         $response = $this->expectRedirectResponse('/dashboard');\n   94  \n   95          $handler = new DefaultAuthenticationSuccessHandler($this->httpUtils, $options);\n   ..\n  112              ->will($this->returnValue($session));\n  113  \n  114:         $response = $this->expectRedirectResponse('/admin/dashboard');\n  115  \n  116          $handler = new DefaultAuthenticationSuccessHandler($this->httpUtils, array());\n  ...\n  130              ->will($this->returnValue('/dashboard'));\n  131  \n  132:         $response = $this->expectRedirectResponse('/dashboard');\n  133  \n  134          $handler = new DefaultAuthenticationSuccessHandler($this->httpUtils, $options);\n  ...\n  150              ->will($this->returnValue('/login'));\n  151  \n  152:         $response = $this->expectRedirectResponse('/');\n  153  \n  154          $handler = new DefaultAuthenticationSuccessHandler($this->httpUtils, $options);\n  ...\n  162          $this->request->headers->expects($this->never())->method('get');\n  163  \n  164:         $response = $this->expectRedirectResponse('/');\n  165  \n  166          $handler = new DefaultAuthenticationSuccessHandler($this->httpUtils, array());\n  ...\n  170      }\n  171  \n  172:     private function expectRedirectResponse($path)\n  173      {\n  174          $response = $this->getMock('Symfony\\Component\\HttpFoundation\\Response');\n  175  \n  176          $this->httpUtils->expects($this->once())\n  177:             ->method('createRedirectResponse')\n  178              ->with($this->request, $path)\n  179              ->will($this->returnValue($response));\n\nE:\\workspace\\myframework-php\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Security\\Http\\Tests\\EntryPoint\\FormAuthenticationEntryPointTest.php:\n   26          $httpUtils\n   27              ->expects($this->once())\n   28:             ->method('createRedirectResponse')\n   29              ->with($this->equalTo($request), $this->equalTo('/the/login/path'))\n   30              ->will($this->returnValue($response))\n\nE:\\workspace\\myframework-php\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Security\\Http\\Tests\\EntryPoint\\RetryAuthenticationEntryPointTest.php:\n   25          $response = $entryPoint->start($request);\n   26  \n   27:         $this->assertInstanceOf('Symfony\\Component\\HttpFoundation\\RedirectResponse', $response);\n   28          $this->assertEquals($expectedUrl, $response->headers->get('Location'));\n   29      }\n\nE:\\workspace\\myframework-php\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Security\\Http\\Tests\\Firewall\\SwitchUserListenerTest.php:\n   97              ->method('setToken')->with($originalToken);\n   98          $this->event->expects($this->once())\n   99:             ->method('setResponse')->with($this->isInstanceOf('Symfony\\Component\\HttpFoundation\\RedirectResponse'));\n  100  \n  101          $listener = new SwitchUserListener($this->tokenStorage, $this->userProvider, $this->userChecker, 'provider123', $this->accessDecisionManager);\n\nE:\\workspace\\myframework-php\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Security\\Http\\Tests\\HttpUtilsTest.php:\n   21  class HttpUtilsTest extends \\PHPUnit_Framework_TestCase\n   22  {\n   23:     public function testCreateRedirectResponseWithPath()\n   24      {\n   25          $utils = new HttpUtils($this->getUrlGenerator());\n   26:         $response = $utils->createRedirectResponse($this->getRequest(), '/foobar');\n   27  \n   28          $this->assertTrue($response->isRedirect('http://localhost/foobar'));\n   ..\n   30      }\n   31  \n   32:     public function testCreateRedirectResponseWithAbsoluteUrl()\n   33      {\n   34          $utils = new HttpUtils($this->getUrlGenerator());\n   35:         $response = $utils->createRedirectResponse($this->getRequest(), 'http://symfony.com/');\n   36  \n   37          $this->assertTrue($response->isRedirect('http://symfony.com/'));\n   38      }\n   39  \n   40:     public function testCreateRedirectResponseWithRouteName()\n   41      {\n   42          $utils = new HttpUtils($urlGenerator = $this->getMock('Symfony\\Component\\Routing\\Generator\\UrlGeneratorInterface'));\n   ..\n   54          ;\n   55  \n   56:         $response = $utils->createRedirectResponse($this->getRequest(), 'foobar');\n   57  \n   58          $this->assertTrue($response->isRedirect('http://localhost/foo/bar'));\n\nE:\\workspace\\myframework-php\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Security\\Http\\Tests\\Logout\\DefaultLogoutSuccessHandlerTest.php:\n   23          $httpUtils = $this->getMock('Symfony\\Component\\Security\\Http\\HttpUtils');\n   24          $httpUtils->expects($this->once())\n   25:             ->method('createRedirectResponse')\n   26              ->with($request, '/dashboard')\n   27              ->will($this->returnValue($response));\n\n51 matches across 18 files\n",
			"settings":
			{
				"buffer_size": 14227,
				"line_ending": "Windows",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security/Http/Firewall/ChannelListener.php",
			"settings":
			{
				"buffer_size": 2024,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security/Http/EntryPoint/FormAuthenticationEntryPoint.php",
			"settings":
			{
				"buffer_size": 2060,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security/Http/Authentication/DefaultAuthenticationFailureHandler.php",
			"settings":
			{
				"buffer_size": 3775,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security/Guard/Authenticator/AbstractFormLoginAuthenticator.php",
			"settings":
			{
				"buffer_size": 3412,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 310.0,
		"last_filter": ":W",
		"selected_items":
		[
			[
				":W",
				":w - Save"
			],
			[
				":w",
				":w - Save"
			],
			[
				":auto",
				"Tag: Auto-Format Tags on Document"
			],
			[
				":sw",
				":w - Save"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				":install",
				"Package Control: Install Package"
			]
		],
		"width": 410.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import  urllib.request,os;pf='Package Control.sublime-package';ipp=sublime.installed_packages_path();urllib.request.install_opener(urllib.request.build_opener(urllib.request.ProxyHandler()));open(os.path.join(ipp,pf),'wb').write(urllib.request.urlopen('http://sublime.wbond.net/'+pf.replace(' ','%20')).read())"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/E/workspace/myframework-php",
		"/E/workspace/myframework-php/src",
		"/E/workspace/myframework-php/src/Admin",
		"/E/workspace/myframework-php/vendor",
		"/E/workspace/myframework-php/vendor/symfony",
		"/E/workspace/myframework-php/vendor/symfony/symfony",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Bundle",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/DependencyInjection",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Security",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security/Core/User",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security/Http",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security/Http/Firewall"
	],
	"file_history":
	[
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security/Http/Firewall/AbstractAuthenticationListener.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security/Http/Firewall/BasicAuthenticationListener.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security/Http/Firewall/SwitchUserListener.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security/Http/EntryPoint/AuthenticationEntryPointInterface.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security/Core/User/User.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security/Core/User/UserChecker.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security/Core/User/AdvancedUserInterface.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Security/FirewallMap.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Security/FirewallContext.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/HttpFoundation/RequestMatcherInterface.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/HttpFoundation/RequestMatcher.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/HttpFoundation/Request.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/Factory/SecurityFactoryInterface.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security/Http/Firewall/ContextListener.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security/Http/Firewall/AbstractPreAuthenticatedListener.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Authentication/Provider/AuthenticationProviderInterface.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Authentication/Provider/UserAuthenticationProvider.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Authentication/Provider/DaoAuthenticationProvider.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security/Http/Firewall/UsernamePasswordFormAuthenticationListener.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/HttpFoundation/IpUtils.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security/Http/HttpUtils.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/DependencyInjection/SecurityExtension.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Resources/config/security_listeners.xml",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Authentication/Provider/SimpleAuthenticationProvider.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security/Http/Firewall.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security/Http/FirewallMap.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security/Http/Firewall/SimpleFormAuthenticationListener.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Authentication/SimpleAuthenticatorInterface.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Authentication/AuthenticationManagerInterface.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Authentication/AuthenticationProviderManager.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Authentication/AuthenticationTrustResolver.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security/Http/Authentication/AuthenticationUtils.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security/Http/Authentication/SimpleAuthenticationHandler.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security/Http/Authentication/SimpleFormAuthenticatorInterface.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security/Http/EntryPoint/FormAuthenticationEntryPoint.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security/Guard/Firewall/GuardAuthenticationListener.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security/Guard/GuardAuthenticatorHandler.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Security.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security/Core/AuthenticationEvents.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/HttpKernel.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Event/FinishRequestEvent.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Event/GetResponseEvent.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/Container.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security/Http/SecurityEvents.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Validator/Constraints/UserPasswordValidator.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Validator/Constraints/UserPassword.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Validator/Constraint.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Encoder/UserPasswordEncoderInterface.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Encoder/EncoderFactory.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Encoder/EncoderAwareInterface.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Encoder/EncoderFactoryInterface.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Encoder/PasswordEncoderInterface.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Role/RoleInterface.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Authentication/AuthenticationTrustResolverInterface.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Event/AuthenticationFailureEvent.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Event/AuthenticationEvent.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/ContainerInterface.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/ResettableContainerInterface.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/TaggedContainerInterface.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/Variable.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/ContainerBuilder.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/Config/AutowireServiceResource.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/DefinitionDecorator.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/Definition.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security/Core/User/UserProviderInterface.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security/Core/User/UserCheckerInterface.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/EventDispatcher/Event.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/EventDispatcher/EventDispatcher.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/EventDispatcher/DependencyInjection/RegisterListenersPass.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/AccessDeniedException.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security/Core/User/LdapUserProvider.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security/Http/Firewall/AccessListener.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security/Core/User/UserInterface.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security/Http/FirewallMapInterface.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Authentication/Provider/AnonymousAuthenticationProvider.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security/Http/Firewall/AnonymousAuthenticationListener.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security/Http/Firewall/ListenerInterface.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/Loader/FileLoader.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/ParameterBag/ParameterBag.php",
		"/E/workspace/myframework-php/app/config/security.yml",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Kernel.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/DependencyInjection/Reference.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security/Http/Firewall/RemoteUserAuthenticationListener.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Authentication/Token/Storage/TokenStorage.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Authentication/Token/AbstractToken.php",
		"/E/workspace/myframework-php/vendor/symfony/phpunit-bridge/TextUI/Command.php",
		"/E/workspace/myframework-php/vendor/autoload.php",
		"/E/workspace/myframework-php/app/AppKernel.php",
		"/E/workspace/myframework-php/app/autoload.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security/Http/Session/SessionAuthenticationStrategy.php",
		"/E/workspace/myframework-php/tests/AppBundle/Controller/DefaultControllerTest.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Test/WebTestCase.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Controller/Controller.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security/Core/User/InMemoryUserProvider.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Client.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/HttpKernel/Client.php",
		"/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/BrowserKit/Client.php",
		"/E/workspace/myframework-php/vendor/composer/ClassLoader.php",
		"/E/workspace/myframework-php/src/Admin/ClientBundle/Controller/DefaultController.php",
		"/E/workspace/myframework-php/src/Admin/ClientBundle/Controller/ClientPoolController.php",
		"/E/workspace/myframework-php/src/Admin/ClientBundle/Resources/views/ClientPool/index.html.twig",
		"/E/workspace/myframework-php/web/js/console.js",
		"/E/workspace/myframework-php/src/Admin/ConsoleBundle/Resources/translations/messages.zh_CN.php",
		"/E/workspace/myframework-php/src/Admin/UserBundle/Resources/translations/messages.zh_CN.php",
		"/E/workspace/myframework-php/src/Admin/ConsoleBundle/Resources/config/services.yml",
		"/E/workspace/myframework-php/src/Admin/ClientBundle/Resources/translations/messages.zh_CN.php",
		"/E/workspace/myframework-php/src/Admin/AdminBaseController.php",
		"/E/workspace/myframework-php/src/Admin/UserBundle/Resources/config/services.yml",
		"/E/workspace/myframework-php/src/Admin/ClientBundle/Entity/Client.php",
		"/E/workspace/myframework-php/src/Admin/ClientBundle/Controller/ClientAccessRecordController.php",
		"/E/workspace/myframework-php/web/js/dwz.min.js",
		"/E/workspace/myframework-php/src/Admin/ClientBundle/Resources/views/Default/index.html.twig",
		"/E/workspace/myframework-php/src/Admin/ClientBundle/Form/ClientType.php",
		"/E/workspace/myframework-php/src/Admin/UserBundle/Form/UserType.php",
		"/E/workspace/myframework-php/src/Admin/ClientBundle/Resources/views/ClientAccessRecord/index.html.twig",
		"/E/workspace/myframework-php/src/Admin/ClientBundle/Entity/ClientAccessRecord.php",
		"/E/workspace/myframework-php/src/Admin/ClientBundle/Resources/views/Default/create.html.twig",
		"/E/workspace/myframework-php/src/Admin/ConsoleBundle/Resources/views/Default/config.html.twig",
		"/E/workspace/myframework-php/web/css/app.css",
		"/E/workspace/myframework-php/src/Admin/ConsoleBundle/Controller/LoginController.php",
		"/E/workspace/myframework-php/src/Admin/ConsoleBundle/Controller/DefaultController.php",
		"/E/workspace/myframework-php/src/Admin/UserBundle/Controller/DefaultController.php",
		"/E/workspace/myframework-php/src/Admin/ConsoleBundle/Resources/views/base.html.twig",
		"/C/Users/bufan/.ssh/id_rsa.pub",
		"/E/workspace/myframework-php/src/Admin/AccessControlBundle/Resources/views/Default/index.html.twig",
		"/E/workspace/myframework-php/src/Admin/AccessControlBundle/Controller/DefaultController.php",
		"/E/workspace/myframework-php/src/Admin/UserBundle/Resources/views/Default/lookup.html.twig",
		"/E/workspace/myframework-php/src/Admin/UserBundle/Form/UserSearchType.php"
	],
	"find":
	{
		"height": 128.0
	},
	"find_in_files":
	{
		"height": 104.0,
		"where_history":
		[
			"E:\\workspace\\myframework-php\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Security",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"RedirectResponse",
			"ContextListener",
			"\n\n        if( empty($action) ){\n            return $this->error('missing action');\n        }",
			"navTabAjaxDone",
			"ajaxTodo",
			"				$this.data(\"url\",op.url);\n				$this.data(\"options\", op);\n				var json = CONSOLE.jsonEval(response);\n				\n				if (json[CONSOLE.keys.statusCode]==CONSOLE.statusCode.error){\n					if (json[CONSOLE.keys.message]) alertMsg.error(json[CONSOLE.keys.message]);\n				} else {\n					$this.html(response).initUI();\n					if ($.isFunction(op.callback)) op.callback(response, $this);\n				}\n				\n				if (json[CONSOLE.keys.statusCode]==CONSOLE.statusCode.timeout){\n					if ($.pdialog) $.pdialog.checkTimeout();\n					if (navTab) navTab.checkTimeout();\n\n					alertMsg.error(json[CONSOLE.keys.message] || CONSOLE.msg(\"sessionTimout\"), {okCall:function(){\n						CONSOLE.loadLogin();\n					}});\n				} ",
			"lookup",
			"DWZ",
			"jsonEval",
			"$.extend",
			"bringBack",
			"lookup",
			"role",
			"        else{\n        }",
			"        else{\n            $editForm[\"state\"]->setData($entity->getUser()->getIsActive());\n        }",
			"		restore:function(dialog) {\n			var original = $(dialog).data(\"original\");\n			var dwidth = parseInt(original.width);\n			var dheight = parseInt(original.height);\n			$(dialog).css({\n				top:original.top,\n				left:original.left,\n				width:dwidth,\n				height:dheight\n			});\n			$.pdialog._resizeContent(dialog,dwidth,dheight);\n			$(\"a.maximize\",dialog).show();\n			$(\"a.restore\",dialog).hide();\n			$.pdialog.attachShadow(dialog);\n		},",
			"		_init:function(dialog, options) {\n			var op = $.extend({}, this._op, options);\n			var height = op.height>op.minH?op.height:op.minH;\n			var width = op.width>op.minW?op.width:op.minW;\n			if(isNaN(dialog.height()) || dialog.height() < height){\n				$(dialog).height(height+\"px\");\n				$(\".dialogContent\",dialog).height(height - $(\".dialogHeader\", dialog).outerHeight() - $(\".dialogFooter\", dialog).outerHeight() - 6);\n			}\n			if(isNaN(dialog.css(\"width\")) || dialog.width() < width) {\n				$(dialog).width(width+\"px\");\n			}\n			\n			var iTop = ($(window).height()-dialog.height())/2;\n			dialog.css({\n				left: ($(window).width()-dialog.width())/2,\n				top: iTop > 0 ? iTop : 0\n			});\n		},\n		/**\n		 * 初始化半透明层\n		 * @param {Object} resizable\n		 * @param {Object} dialog\n		 * @param {Object} target\n		 */\n		initResize:function(resizable, dialog,target) {\n			$(\"body\").css(\"cursor\", target + \"-resize\");\n			resizable.css({\n				top: $(dialog).css(\"top\"),\n				left: $(dialog).css(\"left\"),\n				height:$(dialog).css(\"height\"),\n				width:$(dialog).css(\"width\")\n			});\n			resizable.show();\n		},\n		/**\n		 * 改变阴隐层\n		 * @param {Object} target\n		 * @param {Object} options\n		 */\n		repaint:function(target,options){\n			var shadow = $(\"div.shadow\");\n			if(target != \"w\" && target != \"e\") {\n				shadow.css(\"height\", shadow.outerHeight() + options.tmove);\n				$(\".shadow_c\", shadow).children().andSelf().each(function(){\n					$(this).css(\"height\", $(this).outerHeight() + options.tmove);\n				});\n			}\n			if(target == \"n\" || target ==\"nw\" || target == \"ne\") {\n				shadow.css(\"top\", options.otop - 2);\n			}\n			if(options.owidth && (target != \"n\" || target != \"s\")) {\n				shadow.css(\"width\", options.owidth + 8);\n			}\n			if(target.indexOf(\"w\") >= 0) {\n				shadow.css(\"left\", options.oleft - 4);\n			}\n		},\n		/**\n		 * 改变左右拖动层的高度\n		 * @param {Object} target\n		 * @param {Object} tmove\n		 * @param {Object} dialog\n		 */\n		resizeTool:function(target, tmove, dialog) {\n			$(\"div[class^='resizable']\", dialog).filter(function(){\n				return $(this).attr(\"tar\") == 'w' || $(this).attr(\"tar\") == 'e';\n			}).each(function(){\n				$(this).css(\"height\", $(this).outerHeight() + tmove);\n			});\n		},\n		/**\n		 * 改变原始层的大小\n		 * @param {Object} obj\n		 * @param {Object} dialog\n		 * @param {Object} target\n		 */\n		resizeDialog:function(obj, dialog, target) {\n			var oleft = parseInt(obj.style.left);\n			var otop = parseInt(obj.style.top);\n			var height = parseInt(obj.style.height);\n			var width = parseInt(obj.style.width);\n			if(target == \"n\" || target == \"nw\") {\n				tmove = parseInt($(dialog).css(\"top\")) - otop;\n			} else {\n				tmove = height - parseInt($(dialog).css(\"height\"));\n			}\n			$(dialog).css({left:oleft,width:width,top:otop,height:height});\n			$(\".dialogContent\", dialog).css(\"width\", (width-12) + \"px\");\n			$(\".pageContent\", dialog).css(\"width\", (width-14) + \"px\");\n			if (target != \"w\" && target != \"e\") {\n				var content = $(\".dialogContent\", dialog);\n				content.css({height:height - $(\".dialogHeader\", dialog).outerHeight() - $(\".dialogFooter\", dialog).outerHeight() - 6});\n				content.find(\"[layoutH]\").layoutH(content);\n				$.pdialog.resizeTool(target, tmove, dialog);\n			}\n			$.pdialog.repaint(target, {oleft:oleft,otop: otop,tmove: tmove,owidth:width});\n			\n			$(window).trigger(DWZ.eventType.resizeGrid);\n		},",
			"	            message: function(){\n	            	var $message = $(\"<div></div>\");\n	            	var callback = function(response){\n	            		$message.html(response);\n	            	};\n	            	$message.ajaxUrl({url:url, data:null, callback:callback, type:options.type});\n	            	return $message;\n	            },",
			"login",
			"body",
			"    /**\n     * 系统配置\n     * @Route(\n     *      \"/config\", name=\"admin_configuration\",\n     *      options = {\"name\":\"系统配置\",\"description\":\"修改系统配置\",\"category\":\"console\",\"order\":7, \"type\":\"console\",\"show\":true} \n     *   )\n     * @Method(\"POST\")\n     */\n    public function configAction()\n    {\n    }",
			"        // you know $subject is a Post object, thanks to supports\n        /** @var Post $post */\n        $post = $subject;\n\n        switch($attribute) {\n            case self::VIEW:\n                return $this->canView($post, $user);\n            case self::EDIT:\n                return $this->canEdit($post, $user);\n        }",
			"    private function canView(Post $post, User $user)\n    {\n        // if they can edit, they can view\n        if ($this->canEdit($post, $user)) {\n            return true;\n        }\n\n        // the Post object could have, for example, a method isPrivate()\n        // that checks a boolean $private property\n        return !$post->isPrivate();\n    }\n\n    private function canEdit(Post $post, User $user)\n    {\n        // this assumes that the data object has a getOwner() method\n        // to get the entity of the user who owns this data object\n        return $user === $post->getOwner();\n    }",
			"selectedTo",
			"checkboxCtrl",
			"selectall",
			"valid",
			"preventDefault",
			"pagerForm",
			"initUI",
			"复制",
			"_getPagerForm",
			"function(){\n			}",
			"	if (op.rel) {\n		var $box = $parent.find(\"#\" + op.rel);\n		var form = _getPagerForm($box, op.data);\n	} else {\n		var form = _getPagerForm($parent, op.data);\n		var params = $(form).serializeArray();\n		\n		if (op.targetType == \"dialog\") {\n			if (form) $.pdialog.reload($(form).attr(\"action\"), {data: params, callback: op.callback});\n		} else {\n			if (form) navTab.reload($(form).attr(\"action\"), {data: params, callback: op.callback});\n		}\n	}",
			"dwzPageBreak",
			"submit",
			"dwzPageBreak",
			"navTabPageBreak",
			"pagerForm",
			"page",
			"        // if( !$this->isSuperAdmin($user) ){\n        //     $where .= \" and t.id in(\".$this->getUcenter()->getUserDQL($user,$entity).\")\";\n        // }",
			"    /**\n     * 创建一个用户组 \n     * @Route(\n     *      \"/\", name=\"admin_roles_create\",\n     *      options = {\"name\":\"创建用户组\",\"description\":\"创建一个用户组\",\"category\":\"系统管理员\",\"order\":5, \"show\":true}\n     *   )\n     * @Method(\"POST\")\n     * @Template(\"AdminUserBundle:Role:create.html.twig\")\n     */\n    public function createAction(Request $request){\n        $entity = new Role();\n        $form = $this->createForm('Admin\\UserBundle\\Form\\RoleType',$entity, array(\n            'attr'=>array('class'=>'pageForm required-validate'),\n            'action'=>$this->generateUrl('admin_roles_create')\n        ));\n        $form->handleRequest($request);\n\n        if ($form->isSubmitted()) {\n            //表单没有验证通过\n            if( !$form->isValid() ){\n                return $this->error($form->getErrors()->__toString());\n            }\n            $em = $this->getDoctrine()->getManager();\n            $em->getConnection()->beginTransaction();\n            try{\n                $masks = $form->get('mask')->getData();\n                $mask = 0;\n                foreach ($masks as $value) {\n                    $mask |= $value;\n                }\n                $entity->setMask($mask);\n                $em->persist($entity);\n                $em->flush();\n                $em->getConnection()->commit();\n                return $this->success();\n            }catch(Exception $e){\n                $em->getConnection()->rollback();\n                $em->close();\n                throw $e;\n            }\n        }\n\n        return array(\n            'entity' => $entity,\n            'form'   => $form->createView(),\n        );\n    }",
			"_widget",
			"	public function materielStateFlowFilter($state){\n		$states = array(\"退回\",\"申请中\",\"完成\");\n		return $states[$state];\n	}\n	public function materielStateFilter($state){\n		$states = array(\"待确认\",\"申请中\",\"完成\");\n		return $states[$state];\n	}\n	public function codeTypeFilter($code){\n		$newValue = \"--\";\n\n		if( isset($this->codeTypes[$code]) ){\n			$newValue = $this->codeTypes[$code];\n		}\n\n		return $newValue;\n\n	}\n	public function picsFilter($pics){\n		if( empty($pics) ){\n			return \"--\";\n		}\n\n		$picArr = explode(\"|\", trim($pics,'|'));\n\n		$returnValue = \"\";\n		foreach ($picArr as $key => $value) {\n			if( !empty($value) ){\n				$returnValue .= \"<img src='$value' width='100' height='80' style='margin:5px;float:left;' />\";\n			}\n		}\n\n		$returnValue .= \"<div class='clearfix' style='clear:both'></div>\";\n		return $returnValue;\n	}\n\n	public function getCodeTypes(){\n		return $this->codeTypes;\n	}",
			"body {\n  padding-top: 50px;\n}\n",
			".sidebar {\n  display: none;\n}",
			"  margin-right: 20px;\n  position: absolute;\n  top: 50px;\n  bottom: 0px;\n  overflow: hidden;",
			"target",
			"DATA_CACHE_TYPE"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"CONSOLE",
			"entity",
			"_row"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/DependencyInjection/SecurityExtension.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 27788,
						"regions":
						{
						},
						"selection":
						[
							[
								17732,
								17732
							]
						],
						"settings":
						{
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1213.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 1,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14227,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										307,
										323
									],
									[
										556,
										572
									],
									[
										777,
										793
									],
									[
										913,
										929
									],
									[
										1108,
										1124
									],
									[
										1267,
										1283
									],
									[
										1481,
										1497
									],
									[
										1754,
										1770
									],
									[
										2011,
										2027
									],
									[
										2428,
										2444
									],
									[
										2668,
										2684
									],
									[
										3094,
										3110
									],
									[
										3472,
										3488
									],
									[
										3824,
										3840
									],
									[
										4210,
										4226
									],
									[
										4543,
										4559
									],
									[
										4776,
										4792
									],
									[
										5135,
										5151
									],
									[
										5411,
										5427
									],
									[
										5718,
										5734
									],
									[
										5968,
										5984
									],
									[
										5987,
										6003
									],
									[
										6061,
										6077
									],
									[
										6157,
										6173
									],
									[
										6491,
										6507
									],
									[
										6893,
										6909
									],
									[
										7115,
										7131
									],
									[
										7414,
										7430
									],
									[
										7712,
										7728
									],
									[
										8060,
										8076
									],
									[
										8515,
										8531
									],
									[
										8712,
										8728
									],
									[
										8962,
										8978
									],
									[
										9229,
										9245
									],
									[
										9526,
										9542
									],
									[
										9772,
										9788
									],
									[
										10027,
										10043
									],
									[
										10273,
										10289
									],
									[
										10533,
										10549
									],
									[
										10719,
										10735
									],
									[
										10943,
										10959
									],
									[
										11318,
										11334
									],
									[
										11764,
										11780
									],
									[
										12245,
										12261
									],
									[
										12655,
										12671
									],
									[
										12801,
										12817
									],
									[
										13007,
										13023
									],
									[
										13160,
										13176
									],
									[
										13368,
										13384
									],
									[
										13617,
										13633
									],
									[
										14072,
										14088
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								4909,
								4909
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 1,
							"result_base_dir": "",
							"result_file_regex": "^([^ 	].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 2442.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security/Http/Firewall/ChannelListener.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2024,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 264.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security/Http/EntryPoint/FormAuthenticationEntryPoint.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2060,
						"regions":
						{
						},
						"selection":
						[
							[
								1925,
								1925
							]
						],
						"settings":
						{
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 330.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security/Http/Authentication/DefaultAuthenticationFailureHandler.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3775,
						"regions":
						{
						},
						"selection":
						[
							[
								1832,
								1832
							]
						],
						"settings":
						{
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1588.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/E/workspace/myframework-php/vendor/symfony/symfony/src/Symfony/Component/Security/Guard/Authenticator/AbstractFormLoginAuthenticator.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3412,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"is_xml": false,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 128.0
	},
	"input":
	{
		"height": 40.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "myframework.sublime-project",
	"replace":
	{
		"height": 248.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"userchecker",
				"vendor\\symfony\\symfony\\src\\Symfony\\Component\\Security\\Core\\User\\UserChecker.php"
			],
			[
				"securityfac",
				"vendor\\symfony\\symfony\\src\\Symfony\\Bundle\\SecurityBundle\\DependencyInjection\\Security\\Factory\\SecurityFactoryInterface.php"
			],
			[
				"referene",
				"vendor\\symfony\\symfony\\src\\Symfony\\Component\\DependencyInjection\\Reference.php"
			],
			[
				"kernel",
				"vendor\\symfony\\symfony\\src\\Symfony\\Component\\HttpKernel\\Kernel.php"
			],
			[
				"tokenstorage",
				"vendor\\symfony\\symfony\\src\\Symfony\\Component\\Security\\Core\\Authentication\\Token\\Storage\\TokenStorage.php"
			],
			[
				"controller.php",
				"vendor\\symfony\\symfony\\src\\Symfony\\Bundle\\FrameworkBundle\\Controller\\Controller.php"
			],
			[
				"console.js",
				"web\\js\\console.js"
			],
			[
				"dwz.min.js",
				"web\\js\\dwz.min.js"
			],
			[
				"app.css",
				"web\\css\\app.css"
			],
			[
				"base.",
				"src\\Admin\\ConsoleBundle\\Resources\\views\\base.html.twig"
			],
			[
				"consol",
				"web\\js\\console.js"
			],
			[
				"page_lsit",
				"src\\Admin\\ConsoleBundle\\Resources\\views\\page_list.html.twig"
			],
			[
				"pager",
				"src\\Admin\\ConsoleBundle\\Extension\\PagerExtension.php"
			],
			[
				"formbuildertest",
				"vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form\\Tests\\FormBuilderTest.php"
			],
			[
				"formconfig",
				"vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form\\Tests\\FormConfigTest.php"
			],
			[
				"formconfigbuilder",
				"vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form\\FormConfigBuilder.php"
			],
			[
				"formbuilder",
				"vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form\\FormBuilder.php"
			],
			[
				"page_list",
				"src\\Admin\\ConsoleBundle\\Resources\\views\\page_list.html.twig"
			],
			[
				"router",
				"vendor\\symfony\\symfony\\src\\Symfony\\Component\\Routing\\Router.php"
			],
			[
				"pagerex",
				"src\\Admin\\ConsoleBundle\\Extension\\PagerExtension.php"
			],
			[
				"pagni",
				"vendor\\doctrine\\orm\\lib\\Doctrine\\ORM\\Tools\\Pagination\\Paginator.php"
			],
			[
				"formerrori",
				"vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form\\FormErrorIterator.php"
			],
			[
				"form.php",
				"vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form\\Form.php"
			],
			[
				"datepi",
				"web\\js\\bootstrap-datepicker.js"
			],
			[
				"page_edit",
				"src\\Admin\\ConsoleBundle\\Resources\\views\\page_edit.html.twig"
			],
			[
				"base.html",
				"src\\Admin\\ConsoleBundle\\Resources\\views\\base.html.twig"
			],
			[
				"yamlfileloader",
				"vendor\\symfony\\symfony\\src\\Symfony\\Component\\DependencyInjection\\Loader\\YamlFileLoader.php"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"D:\\Program Files\\Sublime Text 3\\feizhiyi.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 517.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
